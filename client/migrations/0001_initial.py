# Generated by Django 3.2.10 on 2022-08-18 11:23

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'admin'), (2, 'client')], default=1, max_length=10)),
                ('sentpassword', models.CharField(max_length=500)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=500)),
                ('sentpassword', models.CharField(max_length=500)),
                ('address', models.TextField(max_length=255)),
                ('created_at', models.DateTimeField(default=datetime.datetime(2022, 8, 18, 11, 23, 36, 428534, tzinfo=utc))),
                ('updated_at', models.DateTimeField(default=datetime.datetime(2022, 8, 18, 11, 23, 36, 428534, tzinfo=utc))),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('pvt_number', models.CharField(max_length=255)),
                ('clientrep', models.CharField(max_length=255)),
                ('clientrep_email', models.EmailField(max_length=254)),
                ('jobkey', models.CharField(max_length=255)),
                ('copiedemails', models.EmailField(blank=True, max_length=254, null=True)),
                ('copiedemail1', models.EmailField(blank=True, max_length=254, null=True)),
                ('copiedemails2', models.EmailField(blank=True, max_length=254, null=True)),
                ('copiedemails3', models.EmailField(blank=True, max_length=254, null=True)),
                ('pdf', models.FileField(upload_to='raw/')),
                ('completed', models.CharField(choices=[('Complete', 'Complete'), ('Active', 'Active')], default='Active', max_length=8)),
                ('created_at', models.DateTimeField(default=datetime.datetime(2022, 8, 18, 11, 23, 36, 428534, tzinfo=utc))),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('jobstatus', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LaserRep',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('laserrep_name', models.CharField(max_length=255, null=True)),
                ('position', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.PositiveIntegerField()),
                ('ref', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime(2022, 8, 18, 11, 23, 36, 428534, tzinfo=utc))),
                ('job_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='client.dataset')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='NotificationClient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(default=datetime.datetime(2022, 8, 18, 11, 23, 36, 444167, tzinfo=utc))),
                ('updated_at', models.DateTimeField(default=datetime.datetime(2022, 8, 18, 11, 23, 36, 444167, tzinfo=utc))),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.client')),
            ],
        ),
        migrations.CreateModel(
            name='Fields',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('field_name', models.CharField(max_length=255)),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackClient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pvt_number', models.CharField(blank=True, max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('client', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, null=True)),
                ('descrition_of_service', models.TextField(blank=True, null=True)),
                ('analysis_and_report', models.IntegerField(blank=True, default=0, null=True)),
                ('job_schedule', models.IntegerField(blank=True, default=0, null=True)),
                ('staff_performance', models.IntegerField(blank=True, default=0, null=True)),
                ('job_price', models.IntegerField(blank=True, default=0, null=True)),
                ('recommend_us', models.IntegerField(blank=True, default=0, null=True)),
                ('complaint_response', models.IntegerField(blank=True, default=0, null=True)),
                ('rejected_services', models.CharField(blank=True, max_length=3, null=True)),
                ('rejected_services_comment', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('laser_rep', models.CharField(max_length=255)),
                ('client_rep', models.CharField(max_length=255)),
                ('score', models.IntegerField()),
                ('client_rep_designation', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(default=datetime.datetime(2022, 8, 18, 11, 23, 36, 428534, tzinfo=utc))),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.dataset')),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='field_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='client.fields'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='jobstatus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='client.jobstatus'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='jobstatus1',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobstatus_1', to='client.jobstatus'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='jobstatus2',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobstatus_2', to='client.jobstatus'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='jobstatus3',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobstatus_3', to='client.jobstatus'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='jobstatus4',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobstatus_4', to='client.jobstatus'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='laserrep_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='client.laserrep'),
        ),
        migrations.CreateModel(
            name='AdminLaser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime(2022, 8, 18, 11, 23, 36, 428534, tzinfo=utc))),
                ('updated_at', models.DateTimeField(default=datetime.datetime(2022, 8, 18, 11, 23, 36, 428534, tzinfo=utc))),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
